{"version":3,"sources":["redux/selector.js","component/Calander.js","component/Accordion/index.js","component/img/avatar.jfif","component/Modal/index.js","component/LeftMenu.js","redux/addtodo-actions.js","component/MainTop.js","redux/store.js","redux/addtodo-reducer.js","App.js","index.js"],"names":["getTodos","store","days","Array","from","length","_","i","TaskDay","tasks","calanderDay","map","task","Date","date","getDate","Calander","allTodos","useSelector","className","day","Accordion","useState","expanded","setExpanded","console","log","onClick","todo","SendData","data","a","fetch","method","headers","body","JSON","stringify","res","json","message","Modal","open","setOpen","dispatch","useDispatch","close","useCallback","complete","newTask","setNewTask","handelChange","e","target","name","value","htmlFor","id","onChange","type","then","payload","fetchData","LeftMenu","props","completeTodo","filter","useEffect","src","avatar","alt","width","style","marginRight","times","MainTop","toggleButton","settoggleButton","placeholder","index","findIndex","t","time","createStore","state","action","applyMiddleware","logger","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a2fc1e9.chunk.js","sourcesContent":["export const getTodos = (store) => store;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getTodos } from \"../redux/selector\";\r\nimport \"./Calander.scss\";\r\n\r\nconst days = Array.from({ length: 30 }, (_, i) => i + 1);\r\n\r\nconst TaskDay = ({ tasks, calanderDay }) => {\r\n  return tasks.map((task, i) => {\r\n    const day = new Date(task.date).getDate();\r\n    if (day === calanderDay) return <p key={i}>{task.task}</p>;\r\n    else return;\r\n  });\r\n};\r\nexport default function Calander() {\r\n  const allTodos = useSelector(getTodos);\r\n  return (\r\n    <div className=\"calander-dates\">\r\n      {days.map((day) => (\r\n        <div className=\"calander-date\" key={day}>\r\n          <p>{day}</p>\r\n          <TaskDay tasks={allTodos} calanderDay={day} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { addToDO } from \"../../redux/addtodo-actions\";\r\nimport \"./Accordion.scss\";\r\n\r\nexport default function Accordion({ tasks }) {\r\n  const [expanded, setExpanded] = useState(false);\r\n  console.log(`Complete tasks`, tasks);\r\n  return (\r\n    <div className=\"main-Accordion\">\r\n      <div className=\"accordion-summary\">\r\n        <div className=\"accordion-headline\">\r\n          <p>Completed</p>\r\n\r\n          <button\r\n            className=\"accordion-button\"\r\n            onClick={() => setExpanded(!expanded)}\r\n          >\r\n            {expanded ? (\r\n              <i className=\"fas fa-chevron-up\"></i>\r\n            ) : (\r\n              <i className=\"fas fa-chevron-down\"></i>\r\n            )}\r\n          </button>\r\n        </div>\r\n        <div\r\n          className={`${\r\n            expanded ? \"full-height\" : \"no-height\"\r\n          } accordion-detail`}\r\n        >\r\n          {tasks.map((todo, i) => (\r\n            <li key={i} className=\"complete-list-item\">\r\n              <p>{todo.task}</p>\r\n              <small>{todo.date}</small>\r\n            </li>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/avatar.4fe8c26c.jfif\";","import React, { useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./modal.scss\";\r\n\r\nconst SendData = async (data) => {\r\n  try {\r\n    const res = await fetch(\r\n      \"https://6075978f0baf7c0017fa6847.mockapi.io/api/tasks/todos\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(data),\r\n      },\r\n    );\r\n    console.log(`ON SAVE DATA GET`, res.json());\r\n    return res;\r\n  } catch (error) {\r\n    console.log(`ON SAVE DATA ERROR`, error.message);\r\n  }\r\n};\r\n\r\nexport default function Modal({ open, setOpen }) {\r\n  const dispatch = useDispatch();\r\n  const close = useCallback(() => setOpen(false), [setOpen]);\r\n  const [newTask, setNewTask] = useState({\r\n    task: \"\",\r\n    date: \"\",\r\n    complete: false,\r\n  });\r\n  const handelChange = (e) => {\r\n    setNewTask({ ...newTask, [e.target.name]: e.target.value });\r\n  };\r\n  return open ? (\r\n    <div className=\"modal modal-fade\">\r\n      <div className=\"modal-overlay\" onClick={close} />\r\n      <div className=\"modal-body\">\r\n        <div className=\"form\">\r\n          <div className=\"grid\">\r\n            <label htmlFor=\"newTask\">Add a New Task</label>\r\n            <input\r\n              id=\"newTask\"\r\n              name=\"task\"\r\n              value={newTask.task}\r\n              onChange={handelChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"grid\">\r\n            <label htmlFor=\"taskDate\">Task Date</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"taskDate\"\r\n              name=\"date\"\r\n              value={newTask.date}\r\n              onChange={handelChange}\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            className=\"done-button\"\r\n            onClick={() => {\r\n              close();\r\n              SendData(newTask).then((data) =>\r\n                dispatch({ type: \"ADD_TODO\", payload: data }),\r\n              );\r\n              setNewTask({ task: \"\", date: \"\", complete: false });\r\n            }}\r\n          >\r\n            Done\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeItComplete } from \"../redux/addtodo-actions\";\r\nimport { getTodos } from \"../redux/selector\";\r\nimport Accordion from \"./Accordion\";\r\nimport avatar from \"./img/avatar.jfif\";\r\nimport \"./LeftMenu.scss\";\r\nimport Modal from \"./Modal\";\r\n\r\nconst fetchData = async () => {\r\n  const res = await fetch(\r\n    \"https://6075978f0baf7c0017fa6847.mockapi.io/api/tasks/todos\",\r\n  );\r\n  return res.json();\r\n};\r\n\r\nexport default function LeftMenu(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const allTodos = useSelector(getTodos);\r\n  const completeTodo = allTodos?.filter((task) => task.complete === true);\r\n  const dispatch = useDispatch();\r\n  console.log(`allTodos`, allTodos);\r\n  useEffect(() => {\r\n    fetchData().then((data) => dispatch({ type: \"SET_TASKS\", payload: data }));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"left-menu\">\r\n      <div className=\"flex align-center\">\r\n        <img src={avatar} alt=\"avatar\" className=\"avatar\" width={30} />\r\n        <div className=\"title\">\r\n          <p> David Beckham</p>\r\n          <p className=\"bold\">Nate!</p>\r\n        </div>\r\n      </div>\r\n      <hr className=\"divider\" />\r\n      <div style={{ marginRight: 16 }}>\r\n        <div className=\"task-div\">\r\n          <button className=\"add-task\" onClick={() => setOpen(true)}>\r\n            <i className=\"plus far fa-plus\"></i>\r\n            <span>Add a Task</span>\r\n          </button>\r\n\r\n          <ul className=\"task-list\">\r\n            {allTodos?.length ? (\r\n              allTodos\r\n                .filter((task) => task.complete !== true)\r\n                .map((todo, i) => (\r\n                  <li key={i} className=\"task-list-item\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      id=\"task\"\r\n                      name={todo.task}\r\n                      value={todo.task}\r\n                      onClick={() => dispatch(makeItComplete(i))}\r\n                    />\r\n                    <div className=\"grid\">\r\n                      <label htmlFor=\"task\" className=\"bold\">\r\n                        {todo.task}\r\n                      </label>\r\n                      <small>{todo.date}</small>\r\n                    </div>\r\n                  </li>\r\n                ))\r\n            ) : (\r\n              <p>No Task</p>\r\n            )}\r\n          </ul>\r\n        </div>\r\n\r\n        <Accordion tasks={completeTodo} />\r\n        <Modal open={open} setOpen={setOpen} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const addToDO = (task) => ({\r\n  type: \"ADD_TODO\",\r\n  payload: task,\r\n});\r\n\r\nexport const makeItComplete = (id) => ({\r\n  type: \"COMPLETE_TODO\",\r\n  payload: id,\r\n});\r\n","import React, { useState } from \"react\";\r\nimport \"./MainTop.scss\";\r\nconst times = [\"Day\", \"week\", \"Month\"];\r\nexport default function MainTop() {\r\n  const [toggleButton, settoggleButton] = useState(\"Day\");\r\n\r\n  const onNextClick = () => {\r\n    const index = times.findIndex((t) => t === toggleButton);\r\n    if (index > times.length - 1 || index + 1 > times.length - 1)\r\n      return settoggleButton(times[0]);\r\n    else settoggleButton(times[index + 1]);\r\n  };\r\n  const onPervClick = () => {\r\n    const index = times.findIndex((t) => t === toggleButton);\r\n    if (index < 0 || index - 1 < 0)\r\n      return settoggleButton(times[times.length - 1]);\r\n    else settoggleButton(times[index - 1]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-top\">\r\n      <div className=\"top-first-row\">\r\n        <h3>November 2019</h3>\r\n        <div className=\"grid\">\r\n          <p className=\"bold\">Today</p>\r\n          <small>18 , Mon</small>\r\n        </div>\r\n        <div className=\"search-bar\">\r\n          <i className=\"fas fa-search\"></i>\r\n          <input type=\"text\" placeholder=\"Search..\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"calander-buttons\">\r\n        <button className=\"calander-left\" onClick={onPervClick}>\r\n          <i className=\"fas fa-chevron-left\"></i>\r\n        </button>\r\n        {times.map((time) => (\r\n          <button\r\n            key={time}\r\n            className={`time-buttton ${\r\n              toggleButton === time && \"time-button-active\"\r\n            }`}\r\n          >\r\n            {time}\r\n          </button>\r\n        ))}\r\n\r\n        <button className=\"calander-right\" onClick={onNextClick}>\r\n          <i className=\"fas fa-chevron-right\"></i>\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"calander-days\">\r\n        <p>Sun</p>\r\n        <p>Mon</p>\r\n        <p>Tue</p>\r\n        <p>Wed</p>\r\n        <p>Thu</p>\r\n        <p>Fri</p>\r\n        <p>Sat</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport { addtodoReducer } from \"./addtodo-reducer\";\r\n\r\nexport default createStore(addtodoReducer, applyMiddleware(logger));\r\n","export const addtodoReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TODO\":\r\n      return [...state, action.payload];\r\n    case \"SET_TASKS\":\r\n      return action.payload;\r\n    case \"COMPLETE_TODO\": {\r\n      return state.map((task, i) => {\r\n        if (i !== action.payload) {\r\n          return task;\r\n        }\r\n        return {\r\n          ...task,\r\n          complete: true,\r\n        };\r\n      });\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import Calander from \"./component/Calander\";\nimport LeftMenu from \"./component/LeftMenu\";\nimport MainTop from \"./component/MainTop\";\nimport \"./App.scss\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"main\">\n        <LeftMenu />\n        <div>\n          <MainTop />\n          <Calander />\n        </div>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}